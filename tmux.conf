### MISC #######################################################################

# Change the prefix (leader) key
set-option -g prefix c-a

# reload config
bind-key R source-file ~/.tmux.conf \; \
    display-message "Config reloaded"

# send prefix to nested apps
bind-key c-a send-prefix

set-option repeat-time 3000

# toggle last window like screen
bind-key Space last-window

# History limit
set-option -g history-limit 10000

# support 256 colors
set-option -g default-terminal "screen-256color"

# turn on utf8
set-window-option -g utf8 on

# start windows from index 1
set-option -g base-index 1

# start panes from index 1
set-window-option -g pane-base-index 1

# Set window notifications
set-window-option -g monitor-activity on
set-option -g visual-activity off
set-option -g visual-content off
set-option -g visual-bell off
set-option -g bell-action none

# no delay between command sequences
set-option -sg escape-time 0

# current window only as small as smallest client watching it
set-window-option -g aggressive-resize on

# mouse support
set-window-option -g mode-mouse off
set-option -g mouse-select-pane off
set-option -g mouse-resize-pane off
set-option -g mouse-select-window off

# Rate limit to keep terminal responsive on fast command output
set-option -g c0-change-interval 100
set-option -g c0-change-trigger 250

### STATUS BAR #################################################################

# window-status-format
set-option -g window-status-format "#I"
set-option -g window-status-current-format "#I"
set-option -g window-status-separator "  "

# left length - default is 10
set-option -g status-left-length 80

# Refresh the status bar every 1 second.
# set-option -g status-interval 1000

# The status bar itself.
set-option -g status-left "#[fg=green]#H "
set-option -g status-right ""

# default statusbar colors
set-option -g status-fg white
set-option -g status-bg default
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg default
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg default
set-window-option -g window-status-current-bg green
set-window-option -g window-status-current-attr bright

# command/message line colors
set-option -g message-fg white
set-option -g message-bg black
set-option -g message-attr bright

### KEYS #######################################################################

# use vim motion keys while in copy mode
set-option -g status-keys vi
set-window-option -g mode-keys vi
set-window-option -g xterm-keys on

# kill whole session
bind-key q confirm kill-session

# resize pane
bind-key -r + resize-pane -U 1
bind-key -r - resize-pane -D 1
bind-key -r < resize-pane -L 1
bind-key -r > resize-pane -R 1

# flip through windows
bind-key -r n next
bind-key -r p prev

# split into panes
bind-key C-v split-window -v
bind-key C-h split-window -h

# select window 10 instead of 0 using leader-0
bind-key 0 select-window -t  :10

### vim-tmux-navigator ########################################################

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Restore Clear Screen (C-l)
bind-key C-l send-keys 'C-l'

### COPY-MODE KEYMAPINGS #######################################################
# List copy-mode keymaps:
# tmux list-keys ; tmux list-keys -t vi-copy

bind-key -t vi-copy Space page-down
bind-key -t vi-copy BSpace page-up

### NOTES ######################################################################

# set-window-option -g monitor-content [match-string]
# send input to all panes
# tmux set-window-option synchronize-panes on

### END ########################################################################
